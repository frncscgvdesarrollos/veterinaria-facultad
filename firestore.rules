rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role via custom claims
    function isAdmin() {
      return request.auth != null && request.auth.token.admin == true;
    }

    // --- USER DATA ---
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isAdmin();
      allow create: if request.auth != null;

      // Subcollection: MASCOTAS
      // Users can manage their own pets. Admins can manage any pet.
      match /mascotas/{mascotaId} {
        allow get, list, write: if request.auth.uid == userId || isAdmin();

        // -- NEW NESTED STRUCTURE --
        // A user can manage the appointments for their own pet.
        match /turnos/{turnoId} {
          allow read, write: if request.auth.uid == userId || isAdmin();

          // A user can manage the medical records for an appointment.
          match /medicamentos/{medicamentoId} {
            allow read, write: if request.auth.uid == userId || isAdmin();
          }
        }
      }
    }

    // --- GLOBAL COLLECTIONS ---

    // SERVICIOS
    // Anyone can read services. Only admins can modify them.
    match /servicios/{servicioId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // PRODUCTOS (for Store)
    // Anyone can read products. Only admins can modify them.
    match /productos/{productoId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // TURNOS PELUQUERIA (for Availability)
    // Anyone can read availability. Only authenticated users can update it (via server action).
    match /turnos_peluqueria/{fecha} {
        allow read: if true;
        allow write: if request.auth != null;
    }
  }
}
